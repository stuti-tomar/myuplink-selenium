pipeline {
    agent any
     parameters {
        booleanParam(name: 'FORCE_RUN', defaultValue: false, description: 'Force pipeline to run even without changes')
    }
    triggers {
        pollSCM('H/5 * * * *')  // Check for changes every 5 minutes
        cron('H 12 * * *')      // Run the job every day at 12 PM (noon)
    }
    stages {

		 // Stage 1: Checkout Code from Repository
        stage('Checkout Code') {
            steps {
				echo "Fetching the latest code from the repository..."
                git branch: 'development',
                    url: 'https://github.com/stuti-tomar/myuplink-selenium.git',
                    credentialsId: 'GitHub_PAT'
            }
        }
        
         // Stage 2: Build the Project
        stage('Build') {
            steps {
                // Clean the environment by removing old files
                echo "Cleaning the environment..."
                bat 'mvn clean'

                 // The install phase resolves and downloads the dependencies, without running tests.
                echo "Running Maven build (without tests)..."
                bat 'mvn clean install -DskipTests'
            }
        }
        
        // Stage 3: Run Automated Tests
        stage('Run Tests') {
            steps {
				echo "Running automated tests..."
                bat 'mvn test'
            }
        }
        }
        
        // Step 4: Generate and Archive Test Reports
        
    
      //  stage('Generate and Archive Reports') {
        //steps {
                // Archiving TestNG or JUnit reports for later analysis or viewing in Jenkins UI
          //      echo "Archiving TestNG results and publishing test reports..."
        
        // Ensure the path matches where your reports are generated
        //archiveArtifacts artifacts: 'target/surefire-reports/**/*', allowEmptyArchive: true
        
        // Publish JUnit or TestNG test results to Jenkins UI
       // junit 'target/surefire-reports/*.xml'
            //}
        //}
   // }
    
    post {
        always {
			// Notify on Build Completion (Always)
            mail to: 'stuti.tomar2011@gmail.com, stuti.tomar2015@gmail.com',
                subject: "Build #${BUILD_NUMBER}: Test Execution Completed",
                body: "The test execution for build #${BUILD_NUMBER} has completed. Please check Jenkins for details: ${BUILD_URL}"
        }
         success {
            // Notify on Success
            mail to: 'stuti.tomar2011@gmail.com',
                subject: "Build #${BUILD_NUMBER}: SUCCESS",
                body: "All tests passed successfully for build #${BUILD_NUMBER}. Details: ${BUILD_URL}"
        }
        failure {
            // Notify on Failure
            mail to: 'stuti.tomar2015@gmail.com',
                subject: "Build #${BUILD_NUMBER}: FAILURE",
                body: "Some tests failed in build #${BUILD_NUMBER}. Please investigate the issues. Logs: ${BUILD_URL}"
        }
    }
}